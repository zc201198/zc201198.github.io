<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zc&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2019-05-01T15:10:30.680Z</updated>
  <id>/</id>
  
  <author>
    <name>�ų�</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019.1.10</title>
    <link href="/2019/05/01/2019-1-10/"/>
    <id>/2019/05/01/2019-1-10/</id>
    <published>2019-05-01T15:04:40.000Z</published>
    <updated>2019-05-01T15:10:30.680Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;正对电脑屏幕面前的我，耳机播放着吕思清的《梁祝》,喝着刚买的百事可乐，此时距大三第一学期考完试已过去约4小时。<br><a id="more"></a><br>&emsp;&emsp;这几天的大部分时间都花在了更换自己博客的主题，以及一些小功能的添加（之前的git一直提交不上去，很无奈），下面是当前博客首页：<br><img src="/2019/05/01/2019-1-10/blogIndex.png" alt="">  </p><h1 id="大概说一下："><a href="#大概说一下：" class="headerlink" title="大概说一下："></a>大概说一下：</h1><p>&emsp;&emsp;(1)小生姓张名晨，就读于西北某大学，计算机专业，Java后台开发，决定下学期采取实习+考研双选择，觉得小弟生活，学习有什么需要改进的，可以在文章最下方评论。<br>&emsp;&emsp;(2)小生在生活中也有一个如诗如画般的恋人，彼此相互依靠。  </p><h1 id="编程经历："><a href="#编程经历：" class="headerlink" title="编程经历："></a>编程经历：</h1><p>&emsp;&emsp;大一第二学期C语言，菜鸡一枚(scanf的用法不清楚，代码全靠抄，完后全部还给老师)。<br>&emsp;&emsp;大二第一学期C++，加入了院系实验室，懂得如何复制粘贴代码块，友元函数，析构函数，至于面向对象方面？！什么鬼。。。<br>&emsp;&emsp;过后寒假，发奋要学好编程，应该是编程之路的开始吧！<br><img src="/2019/05/01/2019-1-10/IMG_20180716_093126.jpg" alt=""></p><center>小生非常之感谢IT界大佬</center>附上链接：[http://yun.itheima.com/course](http://yun.itheima.com/course)&emsp;&emsp;那时花了约二十天，Java基本语法，三大特性，等等，算是过了一遍。那套视频最后一天是关于jdk1.8新特性-lambda表达式，那可是一脸蒙蔽啊，说好的Java不用指针的，C指针当时可坑的我！大概看了下，收拾行李求学去了。  &emsp;&emsp;一年时光如此之快，后台开发学习已经到了练手阶段。但是总结之前得学习也是相当有必要的(后面的文章会逐步更新)。  ![](2019-1-10/javaU.png)<center>上图是Java学习自己存下的一些文件</center><p>光看视频是远远不够的，我认为，而且学校出身并不好，所以休息之余去<br><a href="https://www.nowcoder.com/" target="_blank" rel="noopener">https://www.nowcoder.com/</a><br>看看一些面试题，求职经验分享，下面是自己的战果(大佬勿喷)<br><img src="/2019/05/01/2019-1-10/nowcoder01.png" alt=""><br><img src="/2019/05/01/2019-1-10/nowcoder02.png" alt=""><br><img src="/2019/05/01/2019-1-10/nowcoder03.png" alt=""> </p><h1 id="leetcode"><a href="#leetcode" class="headerlink" title="leetcode"></a><a href="https://leetcode-cn.com/" target="_blank" rel="noopener">leetcode</a></h1><p>上面这个链接对算法的提升是很有帮助的，后面自己也会多多去。   </p><h1 id="搭建博客的初衷"><a href="#搭建博客的初衷" class="headerlink" title="搭建博客的初衷:"></a>搭建博客的初衷:</h1><p>&emsp;&emsp;痴迷于技术的更新，放在本地磁盘中，很少翻动，而现在有块地，能够将自己的想法，学习到的知识，保存下来，并且可以与别人分享。</p><h1 id="发展方向"><a href="#发展方向" class="headerlink" title="发展方向:"></a>发展方向:</h1><p>&emsp;&emsp;(1)主要是技术方面的，如：Java后台方面，数据结构与算法的学习过程。<br>&emsp;&emsp;(2)会有关于对生活的感悟。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;正对电脑屏幕面前的我，耳机播放着吕思清的《梁祝》,喝着刚买的百事可乐，此时距大三第一学期考完试已过去约4小时。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="初衷" scheme="/tags/%E5%88%9D%E8%A1%B7/"/>
    
  </entry>
  
  <entry>
    <title>Java学习|Jdk的获取及环境的配置</title>
    <link href="/2019/05/01/Java%E5%AD%A6%E4%B9%A0-Jdk%E7%9A%84%E8%8E%B7%E5%8F%96%E5%8F%8A%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <id>/2019/05/01/Java学习-Jdk的获取及环境的配置/</id>
    <published>2019-05-01T14:44:55.000Z</published>
    <updated>2019-05-01T15:01:07.135Z</updated>
    
    <content type="html"><![CDATA[<p>Java是最流行于服务器端的编程语言。<br><a id="more"></a></p><h1 id="认识Java"><a href="#认识Java" class="headerlink" title="认识Java"></a>认识Java</h1><p>&emsp;&emsp;Java是由Sun公司于1995年推出的一门面向对象编程语言。<br>&emsp;&emsp;Java可运行于多个平台，如Mac,Windows等等。<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/Java.jpg" alt=""></p><h1 id="Jdk的获取"><a href="#Jdk的获取" class="headerlink" title="Jdk的获取"></a>Jdk的获取</h1><p>&emsp;&emsp;下面以Win10X64位系统，谷歌浏览器为例<br>&emsp;&emsp;首先进入<a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a>，搜索框输入Jdk，会出现<br>以下界面:<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112110017.png" alt=""><br>&emsp;&emsp;点击第一个链接，会进入Oracle官网(Jdk已经更新到11了，真是让人吃不消啊)，点击Download。<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112110337.png" alt=""><br>&emsp;&emsp;注意：根据你的操作系统勾选合适的选项，这里我选择视窗，.exe文件(还需同意使用协议)，下面会进行下载。<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112110550.png" alt=""><br>下图是下载好的exe文件，双击：<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112111523.png" alt=""><br>点击下一步:<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112111654.png" alt=""><br>&emsp;&emsp;这里我选择安装到D盘(源代码下拉菜单选择第二项：此功能及所有子功能将安装在本地硬盘上。),点击下一步。<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112111823.png" alt=""><br>下面是安装进度条:<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112112207.png" alt=""><br>安装完成，点击关闭(注意:jdk1.8之前版本会选择Jre位置，请参考百度)<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112112308.png" alt=""></p><h1 id="环境变量的配置"><a href="#环境变量的配置" class="headerlink" title="环境变量的配置"></a>环境变量的配置</h1><p>右击此电脑，选择 属性<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112112759.png" alt=""><br>选择 高级系统设置，弹出的系统属性窗口，选择 环境变量<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112113038.png" alt=""><br>&emsp;&emsp;寻找 系统变量，新建CLASSPATH(变量名输入CLASSPATH,变量值输入 .;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar 注意最前面有一点)<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112113418.png" alt=""><br>&emsp;&emsp;系统变量中新建 JAVA_HOME变量，变量值选择Jdk安装位置(由于自己电脑安装多个Jdk，故变量名后有版本号，若初次安装，不用写版本号)<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112114112.png" alt=""><br>系统变量寻找Path变量名，在变量值追加 %JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112114826.png" alt="">  </p><h1 id="测试安装是否成功"><a href="#测试安装是否成功" class="headerlink" title="测试安装是否成功"></a>测试安装是否成功</h1><p>Windows+R键，打开 运行窗口，输入 cmd指令,打开DOS窗口<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112115058.png" alt=""><br>&emsp;&emsp;分别输入 java,javac,java -version(若出现类似下面结果，版本号检测出来，则安装和配置成功)<br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112115203.png" alt=""><br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112115319.png" alt=""><br><img src="/2019/05/01/Java学习-Jdk的获取及环境的配置/TIM截图20190112115435.png" alt="">  </p><p>地基已经搭好了，接下来就是盖房子了！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java是最流行于服务器端的编程语言。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="/categories/Java/"/>
    
    
      <category term="环境变量" scheme="/tags/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>Java后端学习路线</title>
    <link href="/2019/05/01/Java%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    <id>/2019/05/01/Java后端学习路线/</id>
    <published>2019-05-01T14:36:22.000Z</published>
    <updated>2019-05-01T14:40:49.274Z</updated>
    
    <content type="html"><![CDATA[<p>也算是对学习一年多的Java有了交代。<br><a id="more"></a><br>学习于黑马程序员所开源视频。</p><h1 id="基础阶段"><a href="#基础阶段" class="headerlink" title="基础阶段"></a>基础阶段</h1><p><img src="/2019/05/01/Java后端学习路线/TIM截图20190214112057.png" alt=""><br>&emsp;&emsp;如上图，此视频主要是针对想要快速了解Java这类人群，或是遗忘某一内存模型，集合的内部实现。视频的后两天会是Jdk1.8新特性和函数式编程，是学习新知识的快速捷径。<br>&emsp;&emsp;我是从这个视频开始入门的，老师也讲得生动、详细（里面有个”三国”的案例是不错的，在面向对象章节那块）。<br>&emsp;&emsp;视频链接：<a href="http://yun.itheima.com/course/269.html" target="_blank" rel="noopener">http://yun.itheima.com/course/269.html</a>  </p><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>&emsp;&emsp;后台开发，免不了要跟数据库打交道，此阶段需了解工具类及其如何使用，sql的基本语法，在此基础上进行项目实战，如下:<br><img src="/2019/05/01/Java后端学习路线/TIM截图20190214154859.png" alt=""><br>视频链接:<a href="http://yun.itheima.com/course/229.html" target="_blank" rel="noopener">http://yun.itheima.com/course/229.html</a>  </p><h1 id="Web开发阶段"><a href="#Web开发阶段" class="headerlink" title="Web开发阶段"></a>Web开发阶段</h1><p>&emsp;&emsp;如今的后台开发需懂得几个前台框架，所以网页制作也是必须了解的。  </p><h2 id="前台储备"><a href="#前台储备" class="headerlink" title="前台储备"></a>前台储备</h2><p>&emsp;&emsp;界面不够美观？展现图片太大？目录结构不够严谨？改嘛，去找前台！从添加各类标签，或调整各方面属性，或许是我最直接的感受。<br>&emsp;&emsp;最原生态的静态网页html，到动态网页，需添加js脚本，又或是经包装过的jquery,了解是必要的。<br>至于bootstrap,vue等等，是在此基础之上所需学习的框架。</p><h2 id="后台基础"><a href="#后台基础" class="headerlink" title="后台基础"></a>后台基础</h2><p>&emsp;&emsp;后台中最基础也是最重要的是这条线:servlet+jsp+mysql(这点是毋庸置疑的)。以此为中心，周围围绕着ajax,事务处理，抓包工具获得的信息分析，以及增删改查。  </p><blockquote><p>掌握以上知识便可以开发一个简单的系统，如下参考:<br><img src="/2019/05/01/Java后端学习路线/TIM截图20190214161736.png" alt=""> </p></blockquote><p>视频链接:<a href="http://yun.itheima.com/course/237.html" target="_blank" rel="noopener">http://yun.itheima.com/course/237.html</a></p><h2 id="框架开发"><a href="#框架开发" class="headerlink" title="框架开发"></a>框架开发</h2><p>&emsp;&emsp;谈到框架就不得不提Spring全家桶，为系统的开发注入了无限的活力，在面试当中，如当下火热的springboot或是微服务，基本的环境搭建和使用是必须的，spring源码的内部剖析则会为本次面试加分。  </p><blockquote><p>听过这么一句话:”在系统的开发中，框架的份量会占据大半片江山，而自己手动写的不足10%.”  </p></blockquote><p>&emsp;&emsp;开发不会是一个人的事情，需要工具进行管理，如svn，maven，gradle。  </p><h1 id="福利到"><a href="#福利到" class="headerlink" title="福利到"></a>福利到</h1><p>下面是我这一年多所认为的精华，分享给众友:<br>链接：<a href="https://pan.baidu.com/s/1J6fkVH-QK8Ktsj4d6hcuDg" target="_blank" rel="noopener">https://pan.baidu.com/s/1J6fkVH-QK8Ktsj4d6hcuDg </a><br>提取码：fyrv。</p><hr><p>编程是用尽一生所去追求的事业，无论结果如何。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;也算是对学习一年多的Java有了交代。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="开源" scheme="/tags/%E5%BC%80%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>Springboot学习</title>
    <link href="/2019/05/01/Springboot%E5%AD%A6%E4%B9%A0/"/>
    <id>/2019/05/01/Springboot学习/</id>
    <published>2019-05-01T14:03:05.000Z</published>
    <updated>2019-05-01T14:07:45.630Z</updated>
    
    <content type="html"><![CDATA[<p>约定优于配置，赶上了时代的潮流？<br><a id="more"></a>  </p><blockquote><p>5.1，给自己放个假先。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>&emsp;&emsp;使用Springboot,可以很轻松创建独立运行的程序，非常容易构建独立的服务组件，是实现分布式架构、微服务架构利器。<br>&emsp;&emsp;Spring boot简化了第三方包的引用，通过提供的starter，简化了依赖包的配置。 </p><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li>轻松创建独立的Spring应用程序。</li><li>内嵌Tomcat、jetty等web容器，不需要部署WAR文件。</li><li>提供一系列的“starter” 来简化的Maven配置，不需要添加很多依赖。</li><li>开箱即用，尽可能自动配置Spring。</li></ul></blockquote><hr><blockquote><p>一条搬砖流程：Spring+MyBatis+Freemarker，作为近一段时间的收获。  </p></blockquote><p>&emsp;&emsp;下面是项目目录结构:<br><img src="/2019/05/01/Springboot学习/TIM截图20190501205407.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;约定优于配置，赶上了时代的潮流？&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="/categories/Java/"/>
    
    
      <category term="构建" scheme="/tags/%E6%9E%84%E5%BB%BA/"/>
    
      <category term="简化" scheme="/tags/%E7%AE%80%E5%8C%96/"/>
    
      <category term="Springboot" scheme="/tags/Springboot/"/>
    
  </entry>
  
  <entry>
    <title>闲笔</title>
    <link href="/2019/01/17/%E9%97%B2%E7%AC%94/"/>
    <id>/2019/01/17/闲笔/</id>
    <published>2019-01-17T11:22:29.000Z</published>
    <updated>2019-05-01T14:24:43.913Z</updated>
    
    <content type="html"><![CDATA[<p>Java定义了一系列规范，我的生活也应当如此。<br><a id="more"></a><br><img src="https://i.imgur.com/ceciX6s.png" alt="">  </p><blockquote><p>小生就读于陕西省榆林市榆阳区崇文西路榆林学院，上图是下学期的课程表(注意:大三下学期)</p></blockquote><h1 id="浅谈"><a href="#浅谈" class="headerlink" title="浅谈"></a>浅谈</h1><p>&emsp;&emsp;未及弱冠之年的我，家里常联系的朋友也就那么几个，不过关系挺铁，遇上什么事都能互相照应。<br><img src="https://i.imgur.com/w1dxtwR.jpg" alt="">  </p><p><center>这是跟他们某天去看电影</center>  </p><hr><p>至于学校生活，大多数时间都是在实验室度过的。<br><img src="https://i.imgur.com/Kt9Nri8.jpg" alt="">  </p><h1 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h1><p>&emsp;&emsp;在屋里修整了约两日半，时间是愈发珍贵，或是看到下学期课表那一刹那，心中迸发出无名的”怒火”，又表现出莫名的无所谓。对啊！上学期曾花了约两个月时间练车，翘课的次数想必现在都数不清，此前约一个月时间准备明年考研，上学期算是”研路夭折”了。<br>&emsp;&emsp;我是那么得相信自己的选择，毕竟现在我得到了很多自己想要的，别人是无法体会的。有些人哀怨自己的时间为什么这么短，殊不知或许意识到课中大把时间不知不觉得逝去(我喜欢走自己的路，并且不愿将这四年的某些不适合我的课程或是全部，空白流逝，与未来做赌注)。<br>&emsp;&emsp;在乎那看似冠冕堂皇的学分，我觉得是不值得的，或是清楚点，面向学习位于前列的人，知识不在于多，在于自己的兴趣与职业发展。<br>&emsp;&emsp;我向往的大学生活，或是名誉教授的讲座，或是文体活动，或是外出实践，或是一系列自己意想不到的有趣生活，似乎很少尝试过。其实现在看来，是正确的，你是个末尾二流大学的学生，跟十多年前的专科是一样的，你现在应当做的事是考取研究生，这才算是紧跟着当代大学生发展的步伐，而不是做一些看似冠冕堂皇的事情，得一些只在本院认可的”荣誉证书”(毕竟自己的能力也就那样)。<br>&emsp;&emsp;把握好剩下的大学生活，做自己喜欢的事(自己基本也就剩下编程这件事情了)，未来的某天，自己失去的或者努力得到的那种校园生活，等着你开启。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java定义了一系列规范，我的生活也应当如此。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="大学" scheme="/tags/%E5%A4%A7%E5%AD%A6/"/>
    
      <category term="愈发珍贵" scheme="/tags/%E6%84%88%E5%8F%91%E7%8F%8D%E8%B4%B5/"/>
    
  </entry>
  
  <entry>
    <title>Java学习|编程基础(上)</title>
    <link href="/2019/01/12/Java%E5%AD%A6%E4%B9%A0-%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80(%E4%B8%8A)/"/>
    <id>/2019/01/12/Java学习-编程基础(上)/</id>
    <published>2019-01-12T07:17:18.000Z</published>
    <updated>2019-01-13T04:40:28.181Z</updated>
    
    <content type="html"><![CDATA[<p>万事万物都得打好基础，Java也不例外。<br><a id="more"></a></p><p><link href="http://cdn.bootcss.com/highlight.js/8.0/styles/monokai_sublime.min.css" rel="stylesheet">  </p><p><script src="http://cdn.bootcss.com/highlight.js/8.0/highlight.min.js"></script>  </p><p><script>hljs.initHighlightingOnLoad();</script><br><em>部分知识点借鉴于传智播客出版的《Java基础入门》</em></p><hr><h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><p>&emsp;&emsp;Java的代码必须放在一个类中:类需要一个关键字Class修饰，Class前面可以加修饰符，下面是基本格式:  </p><pre><code>public class HelloWorld {    public static void main(String[] args) {        System.out.println(&quot;Hello,World&quot;);    }}  </code></pre><hr><h2 id="Java中的注释"><a href="#Java中的注释" class="headerlink" title="Java中的注释"></a>Java中的注释</h2><p>单行注释:</p><pre><code>System.out.println(&quot;1&quot;);//打印输出</code></pre><p>多行注释:  /**/  </p><p>文档注释:  /**  </p><ul><li></li><li>@author Administrator<br><em></em>/  </li></ul><hr><h2 id="Java中的标识符"><a href="#Java中的标识符" class="headerlink" title="Java中的标识符"></a>Java中的标识符</h2><ol><li>定义一些符号标记如参数名，变量名，方法名，类名。  </li><li>由任意顺序的大小写字母，数字，下划线，但不能以数字开头，不能是Java的关键字。   </li><li>标识符是严格区分大小写的。 </li></ol><hr><h2 id="Java中的关键字"><a href="#Java中的关键字" class="headerlink" title="Java中的关键字"></a>Java中的关键字</h2><div class="table-container"><table><thead><tr><th style="text-align:left">关键字</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:left">abstract</td><td style="text-align:center">表明类或者成员方法具有抽象属性</td></tr><tr><td style="text-align:left">extends</td><td style="text-align:center">表明一个类型是另一个类型的子类型，这里常见的类型有类和接口</td></tr><tr><td style="text-align:left">final</td><td style="text-align:center">用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变，用来定义常量</td></tr><tr><td style="text-align:left">instanceof</td><td style="text-align:center">用来测试一个对象是否是指定类型的实例对象</td></tr><tr><td style="text-align:left">synchronized</td><td style="text-align:center">表明一段代码需要同步执行</td></tr><tr><td style="text-align:left">volatile</td><td style="text-align:center">表明两个或者多个变量必须同步地发生变化</td></tr><tr><td style="text-align:left">this</td><td style="text-align:center">指向当前实例对象的引用</td></tr></tbody></table></div><hr><h2 id="Java中的数据类型"><a href="#Java中的数据类型" class="headerlink" title="Java中的数据类型"></a>Java中的数据类型</h2><p><img src="https://i.imgur.com/vyRKR9l.jpg" alt="">  </p><blockquote><p>Java是一种强类型语言，在Java中存储的数据都是有类型的，而且必须在编译时确定其类型。<br>在Java的范畴中，基本数据类型变量存储的是数据本身，而引用数据类型存储的是保存数据的空间地址  </p></blockquote><p>常用的数据类型  </p><div class="table-container"><table><thead><tr><th style="text-align:center">数据类型</th><th style="text-align:center">说明</th><th style="text-align:center">字节</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:center">int</td><td style="text-align:center">整型</td><td style="text-align:center">4</td><td style="text-align:left">int age = 18</td></tr><tr><td style="text-align:center">double</td><td style="text-align:center">双精度浮点型</td><td style="text-align:center">8</td><td style="text-align:left">double price = 20.5</td></tr><tr><td style="text-align:center">float</td><td style="text-align:center">单精度浮点型</td><td style="text-align:center">4</td><td style="text-align:left">float height = 60.5f</td></tr><tr><td style="text-align:center">char</td><td style="text-align:center">字符型</td><td style="text-align:center">2</td><td style="text-align:left">char sex = ‘男’</td></tr><tr><td style="text-align:center">boolean</td><td style="text-align:center">布尔型</td><td style="text-align:center">1</td><td style="text-align:left">boolean flag = true</td></tr></tbody></table></div><hr><p>Java中变量使用规则:  </p><ol><li>Java中的变量必须先声明后使用  </li><li>变量使用是，可以声明变量的同时进行初始化，也可以先声明后复制  </li><li>变量中每次只能赋一次值，但可以修改多次</li></ol><hr><h2 id="Java中的类型转换"><a href="#Java中的类型转换" class="headerlink" title="Java中的类型转换"></a>Java中的类型转换</h2><p>1.自动类型转换:  </p><blockquote><p>必须满足的条件:<br>(1).两种数据类型彼此兼容: 如 double 型兼容 int 型；<br>(2).目标类型的取值范围大于原类型的取值范围: 如 double 类型长度为 8 字节， int 类型为 4 字节，因此 double 类型的变量里直接可以存放 int 类型的数据，但反过来就不可以了。      </p></blockquote><p>2.强制类型转换:  </p><blockquote><p>也叫显示类型转换，强制类型转换容易造成数据丢失，所以在转换时需要多加注意。  </p></blockquote><pre><code>double avg1=75.8;int avg2=(int)avg1;</code></pre><hr><h2 id="Java常量的应用"><a href="#Java常量的应用" class="headerlink" title="Java常量的应用"></a>Java常量的应用</h2><blockquote><p>可以理解成一种特殊的变量，它的值被设定后，在程序运行过程中不允许被改变。    </p></blockquote><pre><code>final double PI=3.14; final String LOVE=&quot;imooc&quot;; </code></pre><blockquote><p>常量名一般使用大写字符。<br>程序中使用常量可以提高代码的可维护性。</p><hr><h2 id="Java中的运算符"><a href="#Java中的运算符" class="headerlink" title="Java中的运算符"></a>Java中的运算符</h2><p>运算符用于对数据进行算术运算、赋值、比较等操作。  </p></blockquote><p>可分为:  </p><ol><li>算术运算符:<br>&emsp;&emsp;主要用于进行基本的算术运算，如加法、减法、乘法、除法等  </li></ol><div class="table-container"><table><thead><tr><th style="text-align:center">算术运算符</th><th style="text-align:center">名称</th><th style="text-align:center">例子  </th></tr></thead><tbody><tr><td style="text-align:center">+</td><td style="text-align:center">加法</td><td style="text-align:center">1+2=3</td></tr><tr><td style="text-align:center">-</td><td style="text-align:center">减法</td><td style="text-align:center">6-5=1</td></tr><tr><td style="text-align:center">*</td><td style="text-align:center">乘法</td><td style="text-align:center">5*2=10</td></tr><tr><td style="text-align:center">/</td><td style="text-align:center">除法</td><td style="text-align:center">4/2=2</td></tr><tr><td style="text-align:center">%</td><td style="text-align:center">求余</td><td style="text-align:center">5%2=1</td></tr><tr><td style="text-align:center">++</td><td style="text-align:center">自增1</td><td style="text-align:center">int i=1；i++</td></tr><tr><td style="text-align:center">—</td><td style="text-align:center">自减1</td><td style="text-align:center">int a=2;a—</td></tr></tbody></table></div><blockquote><p> 其中，++ 和 — 既可以出现在操作数的左边，也可以出现在右边，但结果是不同的!<br> a++:先赋值，后自增;<br>++a:先自增，后赋值。<br>自增和自减运算符只能用于操作变量，不能直接用于操作数值或常量！例如 5++ 、 8— 等写法都是错误的!  </p></blockquote><p>2.赋值运算符:<br>&emsp;&emsp;将常量，变量或表达式的值赋给某一变量</p><div class="table-container"><table><thead><tr><th style="text-align:center">赋值运算符</th><th style="text-align:center">名称</th><th style="text-align:center">例子  </th></tr></thead><tbody><tr><td style="text-align:center">=</td><td style="text-align:center">赋值</td><td style="text-align:center">a=3;//将3赋给a</td></tr><tr><td style="text-align:center">+=</td><td style="text-align:center">加等于</td><td style="text-align:center">a+=b;//a+b的值赋给a</td></tr><tr><td style="text-align:center">-=</td><td style="text-align:center">减等于</td><td style="text-align:center">a-=b;//a=b的值赋给a</td></tr><tr><td style="text-align:center">*=</td><td style="text-align:center">乘等于</td><td style="text-align:center">a<em>=b;//a</em>b的值赋给a</td></tr><tr><td style="text-align:center">/=</td><td style="text-align:center">除等于</td><td style="text-align:center">a/=b;//a/b的值赋给a</td></tr><tr><td style="text-align:center">%=</td><td style="text-align:center">模等于</td><td style="text-align:center">a%=b;//a%b的值赋给a</td></tr></tbody></table></div><p>3.比较运算符:<br>&emsp;&emsp;比较运算符用于对两个数值或变量进行比较，其结果是一个布尔值(true或false)  </p><div class="table-container"><table><thead><tr><th style="text-align:center">比较运算符</th><th style="text-align:center">名称</th><th style="text-align:center">例子  </th></tr></thead><tbody><tr><td style="text-align:center">==</td><td style="text-align:center">相等于</td><td style="text-align:center">4==3;//false</td></tr><tr><td style="text-align:center">!=</td><td style="text-align:center">不等于</td><td style="text-align:center">4!=3;//true</td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center">小于</td><td style="text-align:center">4&lt;3;//false</td></tr><tr><td style="text-align:center">&gt;</td><td style="text-align:center">大于</td><td style="text-align:center">4&gt;3;//true</td></tr><tr><td style="text-align:center">&lt;=</td><td style="text-align:center">小于等于</td><td style="text-align:center">4&lt;=3;//false</td></tr><tr><td style="text-align:center">&gt;=</td><td style="text-align:center">大于等于</td><td style="text-align:center">4&gt;=3;//true</td></tr></tbody></table></div><blockquote><p>注意:  </p></blockquote><ol><li><blockquote><p>、 &lt; 、 &gt;= 、 &lt;= 只支持左右两边操作数是数值类型  </p></blockquote></li><li>== 、 != 两边的操作数既可以是数值类型，也可以是引用类型  </li></ol><p>4.逻辑运算符:<br>&emsp;&emsp;逻辑运算主要用于对布尔型的数据进行操作，其结果仍为布尔型数据  </p><div class="table-container"><table><thead><tr><th style="text-align:center">逻辑运算符</th><th style="text-align:center">名称</th><th style="text-align:center">例子  </th></tr></thead><tbody><tr><td style="text-align:center">&amp;&amp;</td><td style="text-align:center">短路与</td><td style="text-align:center">a&amp;&b;//如果a与b都为true,则返回true</td></tr><tr><td style="text-align:center">ll</td><td style="text-align:center">短路或</td><td style="text-align:center">allb;//如果a与b任一为true，则返回true</td></tr><tr><td style="text-align:center">!</td><td style="text-align:center">非</td><td style="text-align:center">!a;//如果a为false,则返回true </td></tr><tr><td style="text-align:center">^</td><td style="text-align:center">异或</td><td style="text-align:center">a^b;/如果a与b有且仅有一个true，则返回true </td></tr></tbody></table></div><p>5.条件运算符:  </p><blockquote><p>条件运算符（ ? : ）也称为 “三元运算符”。</p><p>语法形式：布尔表达式 ？ 表达式1 ：表达式2</p><p>运算过程：如果布尔表达式的值为 true ，则返回 表达式1 的值，否则返回 表达式2 的值  </p></blockquote><p>如:  </p><pre><code>String str = (8&gt;5) ? &quot;8大于5&quot; : &quot;8小于5&quot;;System.out.println(str);</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;万事万物都得打好基础，Java也不例外。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="/categories/Java/"/>
    
    
      <category term="标识符" scheme="/tags/%E6%A0%87%E8%AF%86%E7%AC%A6/"/>
    
      <category term="关键字" scheme="/tags/%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    
      <category term="数据类型" scheme="/tags/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
      <category term="运算符" scheme="/tags/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
</feed>
